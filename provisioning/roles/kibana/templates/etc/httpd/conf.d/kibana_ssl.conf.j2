<VirtualHost *:443>
  ServerName {{ ansible_fqdn }}

  <IfModule mod_ssl.c>
    SSLEngine on
    SSLProxyEngine on
    SSLProtocol all -SSLv2
    SSLCipherSuite ALL:!ADH:!EXPORT:!SSLv2:RC4+RSA:+HIGH:+MEDIUM:+LOW
    SSLCertificateFile ssl/server.crt
    SSLCertificateKeyFile ssl/server.key
    CustomLog       logs/kibana_ssl_request.log \
                      "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
    ErrorLog        logs/kibana_ssl_error.log

    SetEnvIf User-Agent ".*MSIE.*" \
     nokeepalive ssl-unclean-shutdown \
      downgrade-1.0 force-response-1.0
  </IfModule>

  DocumentRoot /var/www/kibana
  <Directory /var/www/kibana>
    Allow from all
    Options -Multiviews
  </Directory>

  LogLevel warn
  ErrorLog logs/kibana_ssl_error_log
  CustomLog logs/kibana_ssl_access_log combined

  Header set X-XSS-Protection "1; mode=block"
  Header set X-Frame-Options "deny"
  Header set Strict-Transport-Security "max-age=31536000; includeSubDomains"

  # Set global proxy timeouts
  <Proxy http://{{ es_bind_address }}:{{ es_http_port }}>
    ProxySet connectiontimeout=5 timeout=90
  </Proxy>

  # Proxy for _aliases and .*/_search
  <LocationMatch "^/(_nodes|_aliases|.*/_aliases|_search|.*/_search|_mapping|.*/_mapping)$">
    ProxyPassMatch http://{{ es_bind_address }}:{{ es_http_port }}/$1
    ProxyPassReverse http://{{ es_bind_address }}:{{ es_http_port }}/$1
  </LocationMatch>

  # Proxy for kibana-int/{dashboard,temp} stuff (if you don't want auth on /, then you will want these to be protected)
  <LocationMatch "^/(kibana-int/dashboard/|kibana-int/temp)(.*)$">
    ProxyPassMatch http://{{ es_bind_address }}:{{ es_http_port }}/$1$2
    ProxyPassReverse http://{{ es_bind_address }}:{{ es_http_port }}/$1$2
  </LocationMatch>

  <Location />
    AuthType Basic
    AuthBasicProvider file
    AuthName "Restricted"
    AuthUserFile conf.d/kibana-htpasswd
    Require valid-user
  </Location>
</VirtualHost>
